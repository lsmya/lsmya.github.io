<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lsmya.github.io</id>
    <title>小书本</title>
    <updated>2019-12-18T03:35:03.246Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lsmya.github.io"/>
    <link rel="self" href="https://lsmya.github.io/atom.xml"/>
    <subtitle>小可爱一起嗨吗</subtitle>
    <logo>https://lsmya.github.io/images/avatar.png</logo>
    <icon>https://lsmya.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 小书本</rights>
    <entry>
        <title type="html"><![CDATA[Mac 关闭 Adobe Creative Cloud]]></title>
        <id>https://lsmya.github.io/post/Hz9lrueIV</id>
        <link href="https://lsmya.github.io/post/Hz9lrueIV">
        </link>
        <updated>2019-08-21T00:56:52.000Z</updated>
        <content type="html"><![CDATA[<p>关闭：</p>
<pre><code>launchctl unload -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist
</code></pre>
<p>启用：</p>
<pre><code>launchctl load -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android原生方法与js交互]]></title>
        <id>https://lsmya.github.io/post/K4mr3AfWs</id>
        <link href="https://lsmya.github.io/post/K4mr3AfWs">
        </link>
        <updated>2019-07-15T01:16:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="注意一定添加以下配置">注意：一定添加以下配置</h2>
<pre><code>//让WebView支持调用Js
webSettings.setJavaScriptEnabled(true);
//给webview添加Js调用接口
webview.addJavascriptInterface(MainActivity.this,&quot;android&quot;);
</code></pre>
<h3 id="android调用js方法">Android调用js方法</h3>
<p>Android代码：</p>
<pre><code>webview.loadUrl(&quot;javascript:javacallfunc()&quot;);
</code></pre>
<p>js代码：</p>
<pre><code>function javacallfunc(){
}
</code></pre>
<h3 id="js调用android原生方法">js调用Android原生方法</h3>
<p>Android代码：</p>
<pre><code>@JavascriptInterface
public void test(String data) {
}
</code></pre>
<p>js代码：</p>
<pre><code>window.android.test(&quot;需要传递的数据&quot;)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UILabel]]></title>
        <id>https://lsmya.github.io/post/4M_SXdaMQ</id>
        <link href="https://lsmya.github.io/post/4M_SXdaMQ">
        </link>
        <updated>2019-07-05T10:05:01.000Z</updated>
        <content type="html"><![CDATA[<h2 id="基础用法">基础用法</h2>
<pre><code>//设置标签x坐标：10，y坐标：20，长：300，宽：100
let label = UILabel(frame:CGRect(x:10, y:20, width:300, height:100))
label.text = &quot;文本&quot;
label.textColor = UIColor.white //白色文字
label.backgroundColor = UIColor.black //黑色背景
label.textAlignment = .right//文字右对齐
label.font = UIFont.systemFont(ofSize: 17)//字体大小
label.numberOfLines = 2//行数，为0时自动换行
self.view.addSubview(label);
</code></pre>
<h2 id="高度随内容自适应">高度随内容自适应</h2>
<pre><code>let labelFont = label?.font
let labelSize = getLabHeigh(labelStr: &quot;文本内容&quot; font: labelFont!, width: 100)
label.numberOfLines = 0//行数一定要设为0
label!.frame = CGRect(x: 0, y: 0, width: 100, height: labelSize)
</code></pre>
<h3 id="获取内容高度">获取内容高度</h3>
<pre><code>private func getLabHeigh(labelStr:String,font:UIFont,width:CGFloat,lineSpacing:CGFloat=0) -&gt; CGFloat {
    let statusLabelText: NSString = labelStr as NSString
    //这里这个height随便给，设为0也可以
    let size = CGSize(width: width, height: 9999)
    //通过富文本来设置行间距
    let paraph = NSMutableParagraphStyle()
    //行间距设置
    paraph.lineSpacing = lineSpacing
    //样式属性集合
    let attributes = [NSAttributedString.Key.font:font,NSAttributedString.Key.paragraphStyle: paraph]
    //boundingRect函数只有NSString可以用
    let strSize = statusLabelText.boundingRect(with: size, options: .usesLineFragmentOrigin, attributes: attributes, context: nil)
    return strSize.height
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UIImageView]]></title>
        <id>https://lsmya.github.io/post/uiimageview</id>
        <link href="https://lsmya.github.io/post/uiimageview">
        </link>
        <updated>2019-07-05T09:48:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="基础用法">基础用法</h2>
<pre><code>let imageView = UIImageView(frame: CGRect(x: 0, y: 0, width: 50, height: 50))
imageView.image = UIImage.init(named: &quot;portrait.png&quot;)
imageView.layer.cornerRadius = 10.0
imageView.clipsToBounds = true
</code></pre>
<p>设置图片显示样式</p>
<pre><code>imageView.contentMode = .scaleAspectFit
</code></pre>
<h2 id="添加点击事件">添加点击事件</h2>
<pre><code>let singleTapGesture = UITapGestureRecognizer(target: self, action: #selector(imageClick))
imageView.addGestureRecognizer(singleTapGesture)
imageView.isUserInteractionEnabled = true

@objc func imageClick() {
}
</code></pre>
<h2 id="设为圆角">设为圆角</h2>
<pre><code>imageView.layer.cornerRadius = 10.0
imageView.clipsToBounds = true
</code></pre>
<h2 id="加载网络图片">加载网络图片</h2>
<p>使用 <code>AlamofireImage</code> ，Podfile文件中添加 <code>pod 'AlamofireImage', '~&gt; 3.5'</code>，然后运行pod install</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cocoapods导入依赖包]]></title>
        <id>https://lsmya.github.io/post/8Cc7bkeRE</id>
        <link href="https://lsmya.github.io/post/8Cc7bkeRE">
        </link>
        <updated>2019-07-05T06:37:01.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-配置cocoapods">1、配置CocoaPods</h2>
<p>CocoaPods需要系统内已经安装了ruby，如果没有安装，请先安装。可以使用如下命令：</p>
<pre><code>sudo gem install cocoapods
</code></pre>
<p>安装gem工具。随即使用：</p>
<pre><code>pod setup --verbose
</code></pre>
<p>之后，只要pod目录没有更新，就尽可能使用这个命令（快得多）：</p>
<pre><code>pod install --verbose --no-repo-update
</code></pre>
<p>到此命令执行完毕，cocoapods就可以使用了</p>
<h2 id="2-pod使用">2、pod使用</h2>
<h3 id="打开终端进入到项目目录然后初始化pod">打开终端，进入到项目目录，然后初始化pod</h3>
<pre><code>pod init
</code></pre>
<h3 id="编辑podfile文件">编辑Podfile文件</h3>
<pre><code>source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '10.0'
use_frameworks!
xcodeproj 'SouthSea.xcodeproj'

target 'SouthSea' do
    pod 'Alamofire', '~&gt; 4.7'
    pod 'SwiftyJSON', '~&gt; 4.0'
    pod 'AlamofireImage', '~&gt; 3.5'
	pod 'MJRefresh'
end
</code></pre>
<h3 id="安装-下载依赖包">安装、下载依赖包</h3>
<p>在当前项目目录执行以下命令：</p>
<pre><code>pod install
</code></pre>
<h3 id="打开项目">打开项目</h3>
<p>使用workspace文件打开项目</p>
<h2 id="3-常见问题">3、常见问题</h2>
<h3 id="问题">问题：</h3>
<pre><code>Unable to add a source with url `https://github.com/CocoaPods/Specs.git` named
</code></pre>
<h4 id="解决方案">解决方案：</h4>
<p>执行以下命令：</p>
<pre><code>pod repo add master https://github.com/CocoaPods/Specs.git
</code></pre>
<p>然后提示执行’pod setup’，如果出现</p>
<pre><code>[!] The `master` repo is not a git repo.
</code></pre>
<p>进入/users/用户名/.cocoapods/repos，删除master文件夹，然后再次执行</p>
<pre><code>pod setup
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[swift 小菊花加载动画]]></title>
        <id>https://lsmya.github.io/post/SviSTMcBY</id>
        <link href="https://lsmya.github.io/post/SviSTMcBY">
        </link>
        <updated>2019-07-04T02:18:39.000Z</updated>
        <content type="html"><![CDATA[<pre><code>let activityView = UIActivityIndicatorView()
activityView.center = CGPoint(x: self.view.center.x, y: self.view.center.y)
// 停止后，隐藏菊花
activityView.hidesWhenStopped = true
//Style: whiteLarge比较大的白色环形进度条;white白色环形进度条;gray灰色环形进度条
activityView.style = UIActivityIndicatorView.Style.whiteLarge
view.addSubview(self.activityView)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SearchView使用详解]]></title>
        <id>https://lsmya.github.io/post/b1QSAuPuF</id>
        <link href="https://lsmya.github.io/post/b1QSAuPuF">
        </link>
        <updated>2019-06-20T03:41:31.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1创建菜单文件">1.创建菜单文件</h2>
<p>在menu文件夹下新建search.xml文件，文件中重点是 <code>app:actionViewClass=&quot;android.support.v7.widget.SearchView&quot;</code></p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
      xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;
    &lt;item
        android:id=&quot;@+id/action_search&quot;
        android:icon=&quot;@drawable/ic_menu_search&quot;
        android:title=&quot;@string/search&quot;
        app:actionViewClass=&quot;android.support.v7.widget.SearchView&quot;
        app:showAsAction=&quot;ifRoom&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/action_settings&quot;
        android:orderInCategory=&quot;100&quot;
        android:title=&quot;@string/action_settings&quot;
        app:showAsAction=&quot;never&quot;/&gt;
&lt;/menu&gt;
</code></pre>
<h2 id="2设置searchview的属性">2.设置SearchView的属性</h2>
<ul>
<li>输入类型</li>
</ul>
<pre><code>android:inputType
</code></pre>
<ul>
<li>最大宽度</li>
</ul>
<pre><code>android:maxWidth
</code></pre>
<ul>
<li>搜索图标是否显示在搜索框内</li>
</ul>
<pre><code>mSearchView.setIconifiedByDefault(true);
</code></pre>
<ul>
<li>搜索图标是否显示在搜索框内</li>
</ul>
<pre><code>mSearchView.setIconifiedByDefault(true);
</code></pre>
<ul>
<li>设置搜索框展开时是否显示提交按钮，可不显示</li>
</ul>
<pre><code>mSearchView.setSubmitButtonEnabled(true);
</code></pre>
<ul>
<li>让键盘的回车键设置成搜索</li>
</ul>
<pre><code>mSearchView.setImeOptions(EditorInfo.IME_ACTION_SEARCH);
</code></pre>
<ul>
<li>搜索框是否展开，false表示展开</li>
</ul>
<pre><code>mSearchView.setIconified(false);
</code></pre>
<ul>
<li>获取焦点</li>
</ul>
<pre><code>mSearchView.setFocusable(true); 
mSearchView.requestFocusFromTouch();
</code></pre>
<ul>
<li>设置提示词</li>
</ul>
<pre><code>mSearchView.setQueryHint(“请输入关键词”);
</code></pre>
<ul>
<li>设置输入框文字颜色</li>
</ul>
<pre><code>EditText editText = (EditText) mSearchView.findViewById(android.support.v7.appcompat.R.id.search_src_text); 
editText.setHintTextColor(ContextCompat.getColor(this, R.color.white)); 
editText.setTextColor(ContextCompat.getColor(this, R.color.white));
</code></pre>
<ul>
<li>设置输入框内的文字（false控制设置完内容后是否提交）</li>
</ul>
<pre><code>mSearchView.setQuery(&quot;要设置的内容&quot;, false)
</code></pre>
<h3 id="重写activity的oncreateoptionsmenu方法">重写activity的onCreateOptionsMenu方法</h3>
<pre><code>@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    //引用menu文件
    getMenuInflater().inflate(R.menu.search, menu);
    //找到SearchView并配置相关参数
    MenuItem searchItem = menu.findItem(R.id.action_search);
    SearchView mSearchView = (SearchView) MenuItemCompat.getActionView(searchItem);
    //搜索图标是否显示在搜索框内
    mSearchView.setIconifiedByDefault(true);
    //设置搜索框展开时是否显示提交按钮，可不显示
    mSearchView.setSubmitButtonEnabled(true);
    //让键盘的回车键设置成搜索
    mSearchView.setImeOptions(EditorInfo.IME_ACTION_SEARCH);
    //搜索框是否展开，false表示展开
    mSearchView.setIconified(false);
    //获取焦点
    mSearchView.setFocusable(true);
    mSearchView.requestFocusFromTouch();
    //设置提示词
    mSearchView.setQueryHint(&quot;请输入关键字&quot;);
    //设置输入框文字颜色
    EditText editText = (EditText) mSearchView.findViewById(android.support.v7.appcompat.R.id.search_src_text);
    editText.setHintTextColor(ContextCompat.getColor(this, R.color.white));
    editText.setTextColor(ContextCompat.getColor(this, R.color.white));
    return super.onCreateOptionsMenu(menu);
}
</code></pre>
<h2 id="3设置响应监听setonquerytextlistener">3.设置响应监听<code>setOnQueryTextListener</code></h2>
<pre><code>mSearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
    @Override
    public boolean onQueryTextSubmit(String query) {
        // 当点击搜索按钮时触发该方法
        return false;
    }

    @Override
    public boolean onQueryTextChange(String newText) {
        // 当搜索内容改变时触发该方法
        return false;
    }
});
</code></pre>
<p><code>setOnCloseListener</code> ：输入框被关闭的监听</p>
<p><code>setOnSearchClickListener</code> ：点击搜索按钮时的监听</p>
<p><code>setOnSuggestionListener</code> ：提示内容被选中的监听</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manifest merger failed with multiple errors, see logs]]></title>
        <id>https://lsmya.github.io/post/NNY7r7Hh6</id>
        <link href="https://lsmya.github.io/post/NNY7r7Hh6">
        </link>
        <updated>2019-06-19T06:49:17.000Z</updated>
        <content type="html"><![CDATA[<p>如果出现 <code>Manifest merger failed with multiple errors, see logs</code> 错误信息，可以使用 <code>gradlew processDebugManifest --stacktrace</code> 来查看更加详细的信息</p>
<p>Windows：</p>
<pre><code>gradlew processDebugManifest --stacktrace
</code></pre>
<p>Mac：</p>
<pre><code>./gradlew processDebugManifest --stacktrace
</code></pre>
<p>如果提示 <code>bash: ./gradlew: Permission denied</code>，再执行 <code>chmod +x gradlew</code>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关闭Dialog后软键盘无法关闭问题]]></title>
        <id>https://lsmya.github.io/post/id0YeYcLY</id>
        <link href="https://lsmya.github.io/post/id0YeYcLY">
        </link>
        <updated>2019-06-14T07:56:09.000Z</updated>
        <content type="html"><![CDATA[<p>我们经常会为Dialog设置监听 <code>setOnDismissListener</code> 或者 <code>setOnCancelListener</code> 来进行软键盘回收处理，但是此时持有软键盘的 <code>Edittext</code> 对象已经被回收所以无法进行响应处理，最终导致我们无法正常收起软键盘。</p>
<p>解决办法，重写Dialog的 <code>dismiss</code>方法：</p>
<pre><code>@Override
public void dismiss() {
    View view = getCurrentFocus();
    if (view instanceof TextView) {
        InputMethodManager mInputMethodManager = (InputMethodManager) getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
        mInputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), InputMethodManager.RESULT_UNCHANGED_SHOWN);
    }
    super.dismiss();
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[android常用自定义view、工具类、dialog、http请求、6.0权限申请]]></title>
        <id>https://lsmya.github.io/post/8Af10DBI2</id>
        <link href="https://lsmya.github.io/post/8Af10DBI2">
        </link>
        <updated>2019-06-04T14:11:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="使用说明">使用说明</h1>
<p>在dependencies中添加</p>
<pre><code>implementation 'android.library:util:latest_version'
</code></pre>
<p><a href="https://bintray.com/lovelylsmya/android/util/_latestVersion"> <img src="https://api.bintray.com/packages/lovelylsmya/android/util/images/download.svg" alt="version"> </a></p>
<h1 id="介绍">介绍</h1>
<p>请注意！！！该库基于androidx编写</p>
<h2 id="dialog">dialog</h2>
<blockquote>
<p>常用底部弹出弹窗、提示确认弹窗</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">类名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/BottomClickDialog.java">BottomClickDialog</a></td>
<td style="text-align:left">底部弹出弹窗，宽度为屏幕宽度9/10，实例化时传入layoutid和点击控件id</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/BottomDialogById.java">BottomDialogById</a></td>
<td style="text-align:left">底部弹出弹窗，宽度为屏幕宽度9/10，使用自定义布局id</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/BottomDialogByView.java">BottomDialogByView</a></td>
<td style="text-align:left">底部弹出弹窗，宽度为屏幕宽度9/10，使用自定义布局view</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/BottomWidthDialogById.java">BottomWidthDialogById</a></td>
<td style="text-align:left">底部弹出弹窗，宽度等于屏幕宽度，使用自定义布局id</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/BottomWidthDialogByView.java">BottomWidthDialogByView</a></td>
<td style="text-align:left">底部弹出弹窗，宽度等于屏幕宽度，使用自定义布局view</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/HintDialog.java">HintDialog</a></td>
<td style="text-align:left">仿ios提示弹窗</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/BottomListDialog.java">BottomListDialog</a></td>
<td style="text-align:left">屏幕底部弹出列表dialog，使用String集合数据源生成</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/ChooseListDialog.java">ChooseListDialog</a></td>
<td style="text-align:left">屏幕中间弹出选择列表，数据源集合使用泛型，可适用于多种数据格式的集合数据源</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/dialog/RxDialog.java">RxDialog</a></td>
<td style="text-align:left">确认选择弹窗，可以动态添加按钮数量，调整弹窗位置、宽度，调整弹窗风格（确定式弹窗、带取消按钮的纵向排列式弹窗）</td>
</tr>
</tbody>
</table>
<h2 id="http-使用方法">http <a href="https://github.com/lsmya/AndroidLibrary/blob/master/app/src/main/java/cn/lsmya/androidlibrary/activity/HttpActivity.java">使用方法</a></h2>
<blockquote>
<p>http接口请求，链式调用，支持get、post、post上传文件（支持上传进度回调）、delete、put、根据tag随时取消请求、随时更换baseUrl，请求前拦截为接口重新配置，可以更换url、修改请求方法、设置请求头甚至重新发起一个全新的请求</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">类名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/http/Api.java">Api</a></td>
<td style="text-align:left">http请求的操作类，支持get、post（form、json、form+file）、delete（form、json）、put(form、json)等请求，根据tag取消请求</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/http/ApiInitialize.java">ApiInitialize</a></td>
<td style="text-align:left">提供http请求的初始化操作，初始化OkHttp、设置baseUrl、开启debug日志输出、设置请求前拦截回调方法</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/http/ApiCallBack.java">ApiCallBack</a></td>
<td style="text-align:left">http请求结果的回调类，支持请求前、请求成功、请求失败、请求取消、请求结束</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/http/ApiProgressListener.java">ApiProgressListener</a></td>
<td style="text-align:left">上传文件时的上传进度回调</td>
</tr>
</tbody>
</table>
<h2 id="easypermission使用方法">EasyPermission<a href="https://github.com/lsmya/AndroidLibrary/blob/master/permission.md">使用方法</a></h2>
<blockquote>
<p>只需三行代码即可完成权限申请处理</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">类名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/permission/EasyPermission.java">EasyPermission</a></td>
<td style="text-align:left">权限申请处理工具类</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/permission/OnEasyPermissionListener.java">OnEasyPermissionListener</a></td>
<td style="text-align:left">权限申请结果回调</td>
</tr>
</tbody>
</table>
<h2 id="自定义view">自定义view</h2>
<blockquote>
<p>收集一些常用的自定义View</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">类名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/view/CircleImageView.java">CircleImageView</a></td>
<td style="text-align:left">圆形的ImageView</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/view/ImageSquareView.java">ImageSquareView</a></td>
<td style="text-align:left">正方形的ImageView（高度由宽度决定）</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/view/PickerView">PickerView</a></td>
<td style="text-align:left">类似于NumberPicker的选择器</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/view/RoundImageView.java">RoundImageView</a></td>
<td style="text-align:left">圆角的ImageView</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/view/ShapeTextView.java">ShapeTextView</a></td>
<td style="text-align:left">支持圆角、边框的TextView,无需编写drawable文件</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://github.com/lsmya/AndroidLibrary/blob/master/library/src/main/java/rx/library/kit/view/ProgressView.java">ProgressView</a></td>
<td style="text-align:left">圆环式进度条，圆心显示数字进度</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
</feed>